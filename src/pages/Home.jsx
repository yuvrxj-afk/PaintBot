import React, { useState, useEffect, useContext } from "react";
import { Card, FormField } from "../components";
import { ThemeContext,themes } from "../components/ThemeContext";
import Shimmer from "../components/Shimmer";
import { logo } from "../assets";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  const {theme,toggleTheme}=useContext(ThemeContext);
  const body=document.body;
  useEffect(()=>{
    if(theme===themes.light){
      body.classList.add("dark");
      body.classList.remove("light");
    }else{
      body.classList.add("light");
      body.classList.remove("dark");
    }
  },[theme])
  
  return (
    <h2 className="mt-5 font-bold text-[#4979ff] text-xl uppercase">{title}</h2>
    );
  };
  
  const Home = () => {
  const {message}=useContext(ThemeContext);
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState("");
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch(
          "https://paintbot.onrender.com/api/v1/post",
          {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          }
        );
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);
  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };
  const {theme,toggleTheme} = useContext(ThemeContext);
  return (
    <section className={`max-w-7xl mx-auto`}>
      <img src={logo}  alt="" className='w-13 h-20 right-0 left-0 m-auto'/>
      <div>
      

        <h1 className={`font-extrabold font-mono text-[32px]`}>
          The Community Showcase
        </h1>
        <p className={`mt-2 text-[16px] max-w[500px] ${message}`}>
          Browse through a collection of imaginative and visually stunning
          images/creations generated by PaintBot using DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-18">
        {loading ? (
          <Shimmer/>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3 ">
                Showing results for{" "}
                <span className="text-[#1b1c20]">{searchText}</span>
              </h2>
            )}
            <div
              className="mt-10 grid lg:grid-cols-4 sm:grid-cols-3 xs:gird-cols-1 
            grid-cols-1 gap-3 "
            >
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No Search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No Post Found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
